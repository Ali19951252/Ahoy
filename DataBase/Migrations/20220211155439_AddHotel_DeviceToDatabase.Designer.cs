// <auto-generated />
using System;
using DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataBase.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    [Migration("20220211155439_AddHotel_DeviceToDatabase")]
    partial class AddHotel_DeviceToDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("DataBase.Entities.AhoyHotel", b =>
                {
                    b.Property<Guid>("hotel_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Availbale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hotel_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("hotel_id");

                    b.ToTable("AhoyHotel");
                });

            modelBuilder.Entity("DataBase.Entities.CustomerDetails", b =>
                {
                    b.Property<Guid>("Customer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Checkin_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Checkout_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Customer_EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hotel_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Hotel_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Customer_id");

                    b.HasIndex("Hotel_id");

                    b.ToTable("CustomerDetails");
                });

            modelBuilder.Entity("DataBase.Entities.Facilities", b =>
                {
                    b.Property<Guid>("facilities_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("BreakFast")
                        .HasColumnType("bit");

                    b.Property<Guid>("Hotel_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Parking")
                        .HasColumnType("bit");

                    b.Property<bool?>("Spa")
                        .HasColumnType("bit");

                    b.Property<bool?>("Wifi")
                        .HasColumnType("bit");

                    b.HasKey("facilities_id");

                    b.HasIndex("Hotel_id");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("DataBase.Entities.Rooms", b =>
                {
                    b.Property<Guid>("room_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Hotel_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomSize")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("room_id");

                    b.HasIndex("Hotel_id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("DataBase.Entities.CustomerDetails", b =>
                {
                    b.HasOne("DataBase.Entities.AhoyHotel", "hotel_id")
                        .WithMany()
                        .HasForeignKey("Hotel_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hotel_id");
                });

            modelBuilder.Entity("DataBase.Entities.Facilities", b =>
                {
                    b.HasOne("DataBase.Entities.AhoyHotel", "hotel_id")
                        .WithMany()
                        .HasForeignKey("Hotel_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hotel_id");
                });

            modelBuilder.Entity("DataBase.Entities.Rooms", b =>
                {
                    b.HasOne("DataBase.Entities.AhoyHotel", "hotel_id")
                        .WithMany()
                        .HasForeignKey("Hotel_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hotel_id");
                });
#pragma warning restore 612, 618
        }
    }
}
